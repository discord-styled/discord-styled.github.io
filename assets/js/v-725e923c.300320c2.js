"use strict";(self.webpackChunkinteractions_styled_docs=self.webpackChunkinteractions_styled_docs||[]).push([[646],{565:(n,s,t)=>{t.r(s),t.d(s,{data:()=>a});const a={key:"v-725e923c",path:"/latest/api/buttons.html",title:"discord_styled.buttons",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"button()",slug:"button",children:[]},{level:2,title:"buttons()",slug:"buttons",children:[]},{level:2,title:"wait_button()",slug:"wait-button",children:[]}],filePathRelative:"latest/api/buttons.md",git:{updatedTime:1629001593e3}}},9765:(n,s,t)=>{t.r(s),t.d(s,{default:()=>o});const a=(0,t(6252).uE)('<h1 id="discord-styled-buttons" tabindex="-1"><a class="header-anchor" href="#discord-styled-buttons" aria-hidden="true">#</a> <code>discord_styled.buttons</code></h1><p>The buttons package help us with all the button components stuff</p><h2 id="button" tabindex="-1"><a class="header-anchor" href="#button" aria-hidden="true">#</a> <code>button()</code></h2><p>Function to create a button. Needs to go within an action row.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>button<span class="token punctuation">(</span>style<span class="token punctuation">:</span>Union<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">,</span> ButtonStyle<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">&quot;PRIMARY&quot;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\nemoji<span class="token punctuation">:</span>Union<span class="token punctuation">[</span>Emoji<span class="token punctuation">,</span> PartialEmoji<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> custom_id<span class="token punctuation">:</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\nurl<span class="token punctuation">:</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> disabled<span class="token punctuation">:</span><span class="token builtin">bool</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>style</strong> - Style of the button</p><ul><li>String choices: <ul><li><code>&quot;PRIMARY&quot;</code></li><li><code>&quot;BLUE&quot;</code></li><li><code>&quot;BLURPLE&quot;</code></li><li><code>&quot;SECONDARY&quot;</code></li><li><code>&quot;URL&quot;</code></li><li><code>&quot;GRAY&quot;</code></li><li><code>&quot;GREY&quot;</code></li><li><code>&quot;SUCCESS&quot;</code></li><li><code>&quot;GREEN&quot;</code></li><li><code>&quot;DANGER&quot;</code></li><li><code>&quot;RED&quot;</code></li></ul></li></ul><p><strong>label</strong> - Label of the button <br><strong>emoji</strong> - Emoji of the button <br><strong>custom_id</strong> - Id of the button. Needed for non-link buttons.<br><strong>url</strong> - URL of the button. Needed for link buttons. <br><strong>disabled</strong> - Whether the button is disabled or not.</p><h2 id="buttons" tabindex="-1"><a class="header-anchor" href="#buttons" aria-hidden="true">#</a> <code>buttons()</code></h2><p>Function, creates an action row for buttons</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>buttons<span class="token punctuation">(</span><span class="token operator">*</span>button_list<span class="token punctuation">:</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>button_list</strong> - List of buttons to go within the action row</p><h2 id="wait-button" tabindex="-1"><a class="header-anchor" href="#wait-button" aria-hidden="true">#</a> <code>wait_button()</code></h2><p>Function, Waits for a button interaction. Alternative to <code>wait_for_component</code>.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>wait_button<span class="token punctuation">(</span>client<span class="token punctuation">:</span>discord<span class="token punctuation">.</span>Client<span class="token punctuation">,</span> buttons<span class="token punctuation">:</span>Union<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">]</span><span class="token punctuation">,</span> messages<span class="token punctuation">:</span>Union<span class="token punctuation">[</span>Message<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> check<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>client</strong> - The client/bot object. <br><strong>buttons</strong> - Custom ID to check for, or button dict (buttons or button) or list of previous two. <br><strong>messages</strong> - The message object to check for, or the message ID or list of the previous two. <br><strong>check</strong> - Optional check function. Must take <code>ComponentContext</code> as the first parameter. <br><strong>timeout</strong> - The number of seconds to wait before timing out and raising <code>asyncio.TimeoutError</code>.</p>',16),o={render:function(n,s){return a}}}}]);