"use strict";(self.webpackChunkinteractions_styled_docs=self.webpackChunkinteractions_styled_docs||[]).push([[107],{7764:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5fbabc89",path:"/latest/option-templates.html",title:"ðŸ’— Option templates",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Creating a template",slug:"creating-a-template",children:[]},{level:2,title:"Adding more options",slug:"adding-more-options",children:[]},{level:2,title:"Using dictionaries",slug:"using-dictionaries",children:[{level:3,title:"Adding more options",slug:"adding-more-options-1",children:[]}]},{level:2,title:"Re-using templates",slug:"re-using-templates",children:[]},{level:2,title:"Reference",slug:"reference",children:[]}],filePathRelative:"latest/option-templates.md",git:{updatedTime:1630477429e3}}},674:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var t=a(6252);const e=(0,t.uE)('<h1 id="ðŸ’—-option-templates" tabindex="-1"><a class="header-anchor" href="#ðŸ’—-option-templates" aria-hidden="true">#</a> ðŸ’— Option templates</h1><blockquote><p>This is new, comes since version <code>0.5.0</code></p></blockquote><p>Maybe you have more than one slash command using the same options, that&#39;s why discord-styled have Option Templates</p><h2 id="creating-a-template" tabindex="-1"><a class="header-anchor" href="#creating-a-template" aria-hidden="true">#</a> Creating a template</h2><p>Let&#39;s create a template:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># utils.py</span>\n<span class="token keyword">from</span> discord_styled<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>slash <span class="token keyword">import</span> Options\n\nmy_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Now let&#39;s add a name option to our template:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># utils.py</span>\n<span class="token keyword">from</span> discord_styled<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>slash <span class="token keyword">import</span> Options\n\nmy_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>\nmy_options<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Your name&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">Â </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>And finish your template:</p>',9),p=(0,t._)("div",{class:"language-python ext-py line-numbers-mode"},[(0,t._)("pre",{class:"language-python"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"# utils.py"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(" discord_styled"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("utils"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("slash "),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(" Options\n\nmy_options "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Options"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nmy_options"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"name"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"Your name"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nmy_options "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" my_options"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("template"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"highlight-lines"},[(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("div",{class:"highlight-line"},"Â ")]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br")])],-1),o=(0,t._)("div",{class:"language-python ext-py line-numbers-mode"},[(0,t._)("pre",{class:"language-python"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"# utils.py"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(" discord_styled"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("utils"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("slash "),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(" Options\n\nmy_options "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Options"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"name"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"Your name"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"# WARNING: Just use this one-line alternative if you're only adding one option"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"# to your template, if you have more options then use the normal way"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"highlight-lines"},[(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("div",{class:"highlight-line"},"Â "),(0,t._)("br"),(0,t._)("br"),(0,t._)("br")]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br")])],-1),l=(0,t.uE)('<p>And now go to your command file, import the <code>@options</code> decorator, import your template and use it</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># init.py</span>\n<span class="token keyword">from</span> discord_styled<span class="token punctuation">.</span>slash <span class="token keyword">import</span> options\n<span class="token keyword">from</span> utils<span class="token punctuation">.</span>py <span class="token keyword">import</span> my_options\n\n<span class="token decorator annotation punctuation">@options</span><span class="token punctuation">(</span>my_options<span class="token punctuation">)</span>\n<span class="token decorator annotation punctuation">@slash<span class="token punctuation">.</span>slash</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line">Â </div><div class="highlight-line">Â </div><br><br><div class="highlight-line">Â </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>And that&#39;s all!</p><h2 id="adding-more-options" tabindex="-1"><a class="header-anchor" href="#adding-more-options" aria-hidden="true">#</a> Adding more options</h2><p>If you want to add more than one option you can:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># utils.py</span>\n<span class="token keyword">from</span> discord_styled<span class="token punctuation">.</span>slash <span class="token keyword">import</span> Options\n\nmy_options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span>\nmy_options<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Your name&#39;</span><span class="token punctuation">)</span>\nmy_options<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Your age&#39;</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span>\nmy_options<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Your email&#39;</span><span class="token punctuation">)</span>\nmy_options <span class="token operator">=</span> my_options<span class="token punctuation">.</span>template<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">FYI</p><p>The order/position of your options depends on the order in which you add your options, for example, the final position of my options will be: <code>name</code>, <code>age</code>, <code>email</code></p></div><h2 id="using-dictionaries" tabindex="-1"><a class="header-anchor" href="#using-dictionaries" aria-hidden="true">#</a> Using dictionaries</h2><p>If you want you can add options to your templates from dictionaries:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> discord_styled<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>slash <span class="token keyword">import</span> Options\n\ndata <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rule&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Number of the rule&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token punctuation">}</span>\nmy_template <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_from_dict<span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="adding-more-options-1" tabindex="-1"><a class="header-anchor" href="#adding-more-options-1" aria-hidden="true">#</a> Adding more options</h3><p>Or you can use a list of dictionaries but this time using the method <code>add_from_dicts()</code>:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rule&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Number of the rule&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;notes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Wanna add some notes?&#39;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\nmy_template <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_from_dicts<span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="re-using-templates" tabindex="-1"><a class="header-anchor" href="#re-using-templates" aria-hidden="true">#</a> Re-using templates</h2><p>You can re-use a template to create more templates:</p>',15),c=(0,t._)("div",{class:"language-python ext-py line-numbers-mode"},[(0,t._)("pre",{class:"language-python"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"# utils.py"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(" discord_styled"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("utils"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("slash "),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(" Options\n\nmother_template "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Options"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nmother_template"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'rule'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Number of rule'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\nanother_template "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" mother_template"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'notes'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Wanna add some notes?'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\nanother_one "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" mother_template\nanother_one"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'notes'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Wanna add some notes?'"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nanother_one"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"'stars'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Rate this system'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"False"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nanother_one "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" another_one"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("template"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br")])],-1),i=(0,t._)("div",{class:"language-python ext-py line-numbers-mode"},[(0,t._)("pre",{class:"language-python"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"from"),(0,t.Uk)(" discord_styled"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("utils"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("slash "),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(" Options\n\nmother_template "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'name'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'rule'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'description'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Number of rule'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'type'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n\nmother_template"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'name'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'notes'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'description'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Wanna add some notes?'"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nanother_template "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Options"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add_from_dicts"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("mother_template"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\nmother_template"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'name'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'stars'"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'description'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'Rate this system'"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token string"},"'type'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},"'required'"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"False"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\nanother_one "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" Options"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("add_from_dicts"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("mother_template"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br")])],-1),u=(0,t._)("h2",{id:"reference",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),(0,t.Uk)(" Reference")],-1),r=(0,t.Uk)("You can see the syntax, the parameters, types, all the information of the "),k=(0,t._)("code",null,"Options",-1),_=(0,t.Uk)(" class in the "),d=(0,t.Uk)("API Reference"),m={render:function(n,s){const a=(0,t.up)("CodeGroupItem"),m=(0,t.up)("CodeGroup"),b=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t.Wm)(m,null,{default:(0,t.w5)((()=>[(0,t.Wm)(a,{title:"NORMAL"},{default:(0,t.w5)((()=>[p])),_:1}),(0,t.Wm)(a,{title:"ALTERNATIVE"},{default:(0,t.w5)((()=>[o])),_:1})])),_:1}),l,(0,t.Wm)(m,null,{default:(0,t.w5)((()=>[(0,t.Wm)(a,{title:"ADD() METHOD"},{default:(0,t.w5)((()=>[c])),_:1}),(0,t.Wm)(a,{title:"DICTIONARIES"},{default:(0,t.w5)((()=>[i])),_:1})])),_:1}),u,(0,t._)("p",null,[r,k,_,(0,t.Wm)(b,{to:"/latest/api/utils/options.html"},{default:(0,t.w5)((()=>[d])),_:1})])],64)}}}}]);